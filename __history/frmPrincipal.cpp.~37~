//---------------------------------------------------------------------------

#include <vcl.h>
#include <UIAutomation.h>

#pragma hdrstop

#include "frmPrincipal.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
Tprincipal *principal;
HMODULE MyAutomation;

IUIAutomation *g_pAutomation;

//---------------------------------------------------------------------------
__fastcall Tprincipal::Tprincipal(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------

HRESULT InitializeUIAutomation()
{
	CoInitialize(NULL);
    HRESULT hr =
		CoCreateInstance(__uuidof(CUIAutomation),
            NULL, CLSCTX_INPROC_SERVER,
            __uuidof(IUIAutomation),
			(void**)&g_pAutomation);
    return (hr);
}


IUIAutomationElement* GetTopLevelWindowByName(LPWSTR windowName)
{
	if (!windowName)
	{
		return NULL;
	}

	IUIAutomationElement* pRoot;
	IUIAutomationElement* pFound;
	VARIANT varProp;
	varProp.vt = VT_BSTR;
	varProp.bstrVal = SysAllocString(windowName);

	// Get the desktop element
	HRESULT hr = g_pAutomation->GetRootElement(&pRoot);
	// Get a top-level element by name, such as "Program Manager"
	if (pRoot)
	{
		IUIAutomationCondition* pCondition;
		g_pAutomation->CreatePropertyCondition(UIA_NamePropertyId,
			varProp, &pCondition);
		pRoot->FindFirst(TreeScope_Children, pCondition, &pFound);
		pRoot->Release();
		pCondition->Release();
	}

	VariantClear(&varProp);
	return pFound;
}

void __fastcall Tprincipal::btn_AtualizarClick(TObject *Sender)
{
	IUIAutomationElement *test;

	MyAutomation = LoadLibrary(L"UIAutomationCore.dll");

	if(!MyAutomation){
		ShowMessage("Erro ao carregar DLL UIAutomationCore.dll!");
		return;
	} else {

		InitializeUIAutomation();
		test=GetTopLevelWindowByName(L"Nexio Ingest Suite Control Center");
		test->SetFocus();

		CoUninitialize();
		FreeLibrary(MyAutomation);
	}
}
//---------------------------------------------------------------------------


void __fastcall Tprincipal::btn_LerDadosClick(TObject *Sender)
{
	IUIAutomationElement *test;

	MyAutomation = LoadLibrary(L"UIAutomationCore.dll");

	if(!MyAutomation){
		ShowMessage("Erro ao carregar DLL UIAutomationCore.dll!");
		return;
	} else {
		InitializeUIAutomation();
		test=GetTopLevelWindowByName(L"Nexio Ingest Suite Control Center");
//		test->

		CoUninitialize();
		FreeLibrary(MyAutomation);
	}
}
//---------------------------------------------------------------------------

void __fastcall Tprincipal::btn_CancelarClick(TObject *Sender)
{
	principal->Close();
}
//---------------------------------------------------------------------------

